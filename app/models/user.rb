=begin rdoc
=Description
This is an active record model generated by the restful-authentication plugin and slightly modified.
=end
class User < ActiveRecord::Base
  self.primary_key = "user_id"

  # HACK HACK HACK -- how to do attr_accessible from here?
  # prevents a user from submitting a crafted form that bypasses activation
  # anything else you want your user to change should be added here.
  attr_accessible :user_login, :email, :user_name, :password, :password_confirmation, :role, :active

  # Authenticates a user by their login name and unencrypted password.  Returns the user or nil.
  #
  # uff.  this is really an authorization, not authentication routine.
  # We really need a Dispatch Chain here or something.
  # This will also let us return a human error message.

  # Alias for +find(id)+
  def self.find_by_id(id)
    self.find(id)
  end

  # Alias for user_login
  def login
    self.user_login
  end

  # Setter alias for user_login=
  def login=(value)
    write_attribute :user_login, (value ? value.downcase : nil)
  end

  # Setter methdo for email attribute
  def email=(value)
    write_attribute :email, (value ? value.downcase : nil)
  end

  # Returns true if the user is an administartor
  def admin?
    self.role_id == 2
  end

  # Returns true if the user is a super user or administartor
  def super?
    self.role_id >= 1
  end

end
